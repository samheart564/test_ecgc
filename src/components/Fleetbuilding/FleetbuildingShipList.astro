---
import { ItemContainer } from "@components/_common/ItemCell"
import { ShipModal } from "@components/_common/ShipModal"
import type { ShipData } from "@db/types"

const { ships, role } = Astro.props as { ships: ShipData[]; role?: string }

const groups = {
  permanent: ships.filter((s) => s.permanent.isPermanent),
  event: ships.filter((s) => !s.permanent.isPermanent && !s.permanent.isCollab),
  collab: ships.filter((s) => s.permanent.isCollab),
}
---

<h5>Permanently Available:</h5>
{
  groups.permanent.length > 0 ? (
    <>
      <ItemContainer>
        {groups.permanent.map((ship) => (
          <ShipModal
            client:visible={{ rootMargin: "50px" }}
            uniqueID={`${role ?? ""}-permanent-${ship.id}`}
            shipData={ship}
            trigger={{
              hasBorder: true,
              iconNote: null,
              descriptionNote: null,
              largeDescNote: null,
            }}
            loading={false}
          />
        ))}
      </ItemContainer>
      <br />
    </>
  ) : (
    <>
      <p class="font-bold text-red-400">
        There are no ships that meet this criteria.
      </p>
      <br />
    </>
  )
}

<h5>Event-Locked:</h5>
{
  groups.event.length > 0 ? (
    <>
      <ItemContainer>
        {groups.event.map((ship) => (
          <ShipModal
            client:visible={{ rootMargin: "50px" }}
            uniqueID={`${role ?? ""}-event-${ship.id}`}
            shipData={ship}
            trigger={{
              hasBorder: true,
              iconNote: null,
              descriptionNote: null,
              largeDescNote: null,
            }}
            loading={false}
          />
        ))}
      </ItemContainer>
      <br />
    </>
  ) : (
    <>
      <p class="font-bold text-red-400">
        There are no ships that meet this criteria.
      </p>
      <br />
    </>
  )
}

<h5>
  <a
    rel="noopener noreferrer"
    target="_blank"
    href="https://azurlane.koumakan.jp/wiki/Events#Collaboration_Events"
    title="Collaboration Events"
    aria-label="Events#Collaboration_Events"
    class="inline-block"
  >
    Collaboration
  </a>
  :
</h5>
{
  groups.collab.length > 0 ? (
    <>
      <ItemContainer>
        {groups.collab.map((ship) => (
          <ShipModal
            client:visible={{ rootMargin: "50px" }}
            uniqueID={`${role ?? ""}-collab-${ship.id}`}
            shipData={ship}
            trigger={{
              hasBorder: true,
              iconNote: null,
              descriptionNote: null,
              largeDescNote: null,
            }}
            loading={false}
          />
        ))}
      </ItemContainer>
      <br />
    </>
  ) : (
    <>
      <p class="font-bold !text-red-400">
        There are no ships that meet this criteria.
      </p>
      <br />
    </>
  )
}
