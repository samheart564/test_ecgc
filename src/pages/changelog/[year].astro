---
import GuidePageLayout from "@layouts/guides/GuidePageLayout.astro"
import GuideHeading from "@components/_common/GuideHeading.astro"

import { type AstroInstance } from "node_modules/astro/dist/types/public"

// dynamic routing
export async function getStaticPaths() {
  const years = [2023, 2024]

  return years.map((year) => ({
    params: { year: year.toString() },
    props: {
      year,
      isLatestYear: year === years[years.length - 1],
      hasPreviousYear: years.includes(year - 1),
      hasNextYear: years.includes(year + 1),
      previousYear: year - 1,
      nextYear: year + 1,
    },
  }))
}
const {
  year,
  isLatestYear,
  hasPreviousYear,
  hasNextYear,
  previousYear,
  nextYear,
} = Astro.props

const changelogComponents = Object.values(
  import.meta.glob("../../components/Changelog/*.astro", { eager: true }),
) as AstroInstance[]

const ChangelogContent = changelogComponents.find((component) =>
  component.file.includes(`Changelog${year}Content`),
)?.default
---

<GuidePageLayout
  title="Changelog"
  activePage="changelog"
  tocID={`Changelog${year}`}
  metaUrl={isLatestYear ? "changelog" : `changelog${year}`}
  metaDescription="ECGC Changelog"
>
  <GuideHeading title={`Changelog (${year})`}>
    <p>
      {
        hasPreviousYear && (
          <span>
            &lt;&lt;{" "}
            <a
              rel="noopener noreferrer"
              target="_self"
              href={`/test_ecgc/changelog/${previousYear}`}
            >
              {previousYear}
            </a>
          </span>
        )
      }
      {hasPreviousYear && hasNextYear && " | "}
      {
        hasNextYear && (
          <span>
            <a
              rel="noopener noreferrer"
              target="_self"
              href={`/test_ecgc/changelog/${nextYear}`}
            >
              {nextYear}
            </a>{" "}
            &gt;&gt;
          </span>
        )
      }
    </p>
  </GuideHeading>
  {
    ChangelogContent ? (
      <ChangelogContent />
    ) : (
      <p>ERROR. MESSAGE DEVELOPER ASAP</p>
    )
  }
</GuidePageLayout>
